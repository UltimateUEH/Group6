@* @page
@model Group6_MVC.Models.Product //Syntax Razor thay của mấy khứa vô đây
@model Group6_MVC.Models. //Syntax Razor thay của mấy khứa vô đây

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trang Chủ</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/styleView.css">
</head>
<body>
    <header>
        <h1>Group 6</h1>
        <div class="logout-home">
            <button onclick="logout()" style="background-color: #E68484; "><i class="fas fa-sign-out-alt"></i> Đăng xuất</button>
        </div>
    </header>
    <main>
        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Tìm kiếm...">
            <button onclick="search()" style="background-color: #89AAE6;"><i class="fas fa-search"></i></button>
        </div>
        <br>
        <div class="quick-key">
            <h2>Quick key</h2>
            <div id="quickKeyButtons">
                @foreach (var product in Model.Product)
                {
                    <button onclick="addToCart('@product.Name')" style="background-color: #89AAE6; color: #fff; float:right;">
                        @product.Name
                    </button>
                }
            </div>
            <br>
            <button onclick="resetQuickKey()" style="background-color: #89AAE6; color: #fff; float:right;">
                <i class="fas fa-sync-alt"></i>
            </button>
        </div>
        <br>
        <div class="cart">
            <h2>Giỏ hàng</h2>
            <ul id="cartList">
                @foreach (var item in Model.InvoiceDetail)
                {
                    <li>@item.ProductName - @item.Price</li>
                }
            </ul>
            <button onclick="addToPayment()" style="background-color: #89AAE6;">Thêm vào thanh toán</button>
        </div>
        <br>
        <div class="customer">
            <h2>Khách Hàng</h2>
            <select id="customerSelect" style="border-radius: 10px;, background-color: fade;border: none; margin-top: 20px">
                @foreach (var customer in Model.Customer)
                {
                    <option value="@customer.CustomerId">@customer.CustomerName</option>
                }
            </select>
            <input type="text" id="customerName" placeholder="Nhập tên khách hàng" style="border-radius: 10px;">
            <button onclick="addCustomer()" style="background-color: #89AAE6;">Thêm Khách Hàng</button>
            <ul id="customerList">
                @foreach (var customer in Model.Customer)
                {
                    <li>@customer.Name</li>
                }
            </ul>
        </div>
        <div class="transaction">
            <h2>Màn hình thanh toán</h2>
            <table id="paymentTable">
                <thead>
                    <tr>
                        <th>Sản phẩm</th>
                        <th>Số lượng</th>
                        <th>Giá</th>
                        <th>Thuế</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody id="paymentItems">
                    @foreach (var item in Model.Invoice)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.</td>
                            <td>@item.Price</td>
                            <td>@item.Tax</td>
                            <td>@item.Total</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" style="text-align: right;">Tổng:</td>
                        <td>@Model.TotalAmount</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </main>
    <script>
        // JavaScript code
        const products = @Html.Raw(Json.Serialize(Model.Product));

        let cartItems = [];

        function search() {
            const searchTerm = document.getElementById("searchInput").value.toLowerCase();
            const filteredProducts = products.filter(product => product.name.toLowerCase().includes(searchTerm));
            displayProducts(filteredProducts);
        }

        function displayProducts(products) {
            const tableBody = document.querySelector("#paymentTable tbody");
            tableBody.innerHTML = "";
            let total = 0;

            products.forEach(product => {
                const tax = product.price * 0.1;
                const totalPrice = product.price + tax;
                total += totalPrice;

                const row = `
                            <tr>
                                <td>${product.name}</td>
                                <td>${product.price}</td>
                                <td>${tax}</td>
                                <td>${totalPrice}</td>
                            </tr>
                        `;
                tableBody.innerHTML += row;
            });

            const totalRow = `
                        <tr>
                            <th colspan="3">Tổng cộng</th>
                            <td>${total}</td>
                        </tr>
                    `;
            tableBody.innerHTML += totalRow;
        }

        // Hàm thêm sản phẩm vào giỏ hàng
        function addToCart(productName, productPrice) {
            const product = { name: productName, price: productPrice };
            cartItems.push(product);
            displayCart();
        }

        // Hàm hiển thị giỏ hàng
        function displayCart() {
            const cartList = document.getElementById("cartList");
            cartList.innerHTML = "";
            cartItems.forEach(item => {
                const li = document.createElement("li");
                li.textContent = item.name;
                cartList.appendChild(li);
            });
        }

        // Hàm thêm sản phẩm từ giỏ hàng vào màn hình thanh toán
        function addToPayment() {
            const paymentItems = document.getElementById("paymentItems");
            cartItems.forEach(item => {
                const tax = item.price * 0.1; // Giả sử thuế là 10%
                const totalPrice = item.price + tax;
                const row = `
                            <tr>
                                <td>${item.name}</td>
                                <td>${item.price}</td>
                                <td>${tax}</td>
                                <td>${totalPrice}</td>
                            </tr>
                        `;
                paymentItems.innerHTML += row;
            });
            cartItems = []; // Xóa giỏ hàng sau khi thêm vào thanh toán
            displayCart(); // Cập nhật lại giao diện giỏ hàng
        }

        // Hàm xóa sản phẩm từ màn hình thanh toán
        function removeItem(button) {
            const row = button.parentNode.parentNode;
            const index = Array.from(row.parentNode.children).indexOf(row);
            row.parentNode.removeChild(row);
            cartItems.splice(index, 1);
            displayCart(); // Cập nhật lại giao diện giỏ hàng
        }

        // Mảng chứa danh sách khách hàng
        let customers = [];

        // Hàm thêm khách hàng
        function addCustomer() {
            const customerName = document.getElementById("customerName").value.trim();
            if (customerName !== "") {
                customers.push(customerName);
                displayCustomers();
                document.getElementById("customerName").value = ""; // Xóa input sau khi thêm
            } else {
                alert("Vui lòng nhập tên khách hàng!");
            }
        }

        // Hàm hiển thị danh sách khách hàng
        function displayCustomers() {
            const customerList = document.getElementById("customerList");
            customerList.innerHTML = "";
            customers.forEach(customer => {
                const li = document.createElement("li");
                li.textContent = customer;
                customerList.appendChild(li);
            });
        }

        // Hàm hiển thị tên khách hàng trên màn hình thanh toán
        function displayCustomerOnPayment(customerName) {
            const paymentTable = document.getElementById("paymentTable");
            const tbody = paymentTable.querySelector("tbody");
            const row = `
                        <tr>
                            <td colspan="4">Khách hàng: ${customerName}</td>
                        </tr>
                    `;
            tbody.insertAdjacentHTML("afterbegin", row); // Chèn dòng vào đầu tbody
        }
    </script>
</body>
</html> *@